// <auto-generated />

using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;

namespace SampleApp.Persistence.Migrations
{
    [DbContext(typeof(DbContext))]
    internal class SampleAppContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("CourseTag", b =>
            {
                b.Property<int>("CoursesId")
                    .HasColumnType("int");

                b.Property<int>("TagsId")
                    .HasColumnType("int");

                b.HasKey("CoursesId", "TagsId");

                b.HasIndex("TagsId");

                b.ToTable("CourseTag");
            });

            modelBuilder.Entity("SampleApp.Core.Domain.Author", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int")
                    .UseIdentityColumn();

                b.Property<string>("Name")
                    .HasColumnType("nvarchar(max)");

                b.HasKey("Id");

                b.ToTable("Authors");
            });

            modelBuilder.Entity("SampleApp.Core.Domain.Course", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int")
                    .UseIdentityColumn();

                b.Property<int>("AuthorId")
                    .HasColumnType("int");

                b.Property<string>("Description")
                    .HasColumnType("nvarchar(max)");

                b.Property<float>("FullPrice")
                    .HasColumnType("real");

                b.Property<int>("Level")
                    .HasColumnType("int");

                b.Property<string>("Name")
                    .HasColumnType("nvarchar(max)");

                b.HasKey("Id");

                b.HasIndex("AuthorId");

                b.ToTable("Courses");
            });

            modelBuilder.Entity("SampleApp.Core.Domain.Tag", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int")
                    .UseIdentityColumn();

                b.Property<string>("Name")
                    .HasColumnType("nvarchar(max)");

                b.HasKey("Id");

                b.ToTable("Tags");
            });

            modelBuilder.Entity("CourseTag", b =>
            {
                b.HasOne("SampleApp.Core.Domain.Course", null)
                    .WithMany()
                    .HasForeignKey("CoursesId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.HasOne("SampleApp.Core.Domain.Tag", null)
                    .WithMany()
                    .HasForeignKey("TagsId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();
            });

            modelBuilder.Entity("SampleApp.Core.Domain.Course", b =>
            {
                b.HasOne("SampleApp.Core.Domain.Author", "Author")
                    .WithMany("Courses")
                    .HasForeignKey("AuthorId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("Author");
            });

            modelBuilder.Entity("SampleApp.Core.Domain.Author", b => { b.Navigation("Courses"); });
#pragma warning restore 612, 618
        }
    }
}